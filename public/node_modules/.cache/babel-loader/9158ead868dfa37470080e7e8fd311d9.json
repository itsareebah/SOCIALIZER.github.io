{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\areeb\\\\Documents\\\\PROJECT\\\\chat-app-react-nodejs\\\\PROJECT\\\\chat-app\\\\public\\\\src\\\\components\\\\ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\"; // Chat Input\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatInput = _ref => {\n  _s();\n\n  let {\n    handleSendMsg\n  } = _ref;\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Handle Emoji Picker\n\n  const handleEmojiPickerHideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  }; // Handle Emoji Click\n\n\n  const handleEmojiClick = (e, emoji) => {\n    let msg = message;\n    msg += emoji.emoji;\n    setMessage(msg);\n  }; // Send Chat\n\n\n  const sendChat = e => {\n    e.preventDefault(); // Check if string is empty or contains whitespaces\n\n    const isEmptyOrSpaces = str => {\n      return /^\\s*$/.test(str);\n    };\n\n    if (!isEmptyOrSpaces(message)) {\n      handleSendMsg(message);\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\",\n        children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n          onClick: handleEmojiPickerHideShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: e => sendChat(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message here...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}; // Styled Components\n\n\n_s(ChatInput, \"vLsMD/Is+4ZvGxVcCWtKaS3CUWI=\");\n\n_c = ChatInput;\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 5% 95%;\n  align-items: center;\n  background-color: rgb(218, 154, 165);\n  padding: 0 2rem;\n  padding-bottom: 0.3rem;\n  border-bottom-right-radius: 2rem;\n\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: #fff;\n    gap: 1rem;\n\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 2rem;\n        color: rgba(255, 255, 0 , 0.784);\n        cursor: pointer;\n      }\n\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: rgb(81, 57, 61);\n        box-shadow: 0px 2px 3px white;\n        border-color: #9a86f3;\n\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: rgb(81, 57, 61);\n          width: 5px;\n\n          &-thumb {\n            background-color: rgb(81, 57, 61);\n          }\n        }\n\n        .emoji-categories {\n          button {\n            filter: contrast(1);\n          }\n        }\n\n        .emoji-search {\n          background-color: transparent;\n          background-color: rgb(81, 57, 61);\n        }\n\n        .emoji-group::before {\n          background-color: rgb(81, 57, 61);\n        }\n\n        input {\n          color: black;\n        }\n      }\n    }\n  }\n\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: rgba(255, 255, 255, 0.204);\n\n    input {\n      width: 90%;\n      background-color: transparent;\n      color: #fff;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n\n      &::selection {\n        background-color: #9a86f3;\n      }\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    button {\n      padding: 0.3rem 1.3rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      cursor: pointer;\n\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n\n        svg {\n          font-size: 1rem;\n        }\n      }\n\n      svg {\n        font-size: 2rem;\n        color: #fff;\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default ChatInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","styled","Picker","IoMdSend","BsEmojiSmileFill","ChatInput","handleSendMsg","showEmojiPicker","setShowEmojiPicker","message","setMessage","handleEmojiPickerHideShow","handleEmojiClick","e","emoji","msg","sendChat","preventDefault","isEmptyOrSpaces","str","test","target","value","Container","div"],"sources":["C:/Users/areeb/Documents/PROJECT/chat-app-react-nodejs/PROJECT/chat-app/public/src/components/ChatInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\r\n\r\n// Chat Input\r\nconst ChatInput = ({ handleSendMsg }) => {\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Handle Emoji Picker\r\n  const handleEmojiPickerHideShow = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  // Handle Emoji Click\r\n  const handleEmojiClick = (e, emoji) => {\r\n    let msg = message;\r\n    msg += emoji.emoji;\r\n    setMessage(msg);\r\n  };\r\n\r\n  // Send Chat\r\n  const sendChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if string is empty or contains whitespaces\r\n    const isEmptyOrSpaces = (str) => {\r\n      return /^\\s*$/.test(str);\r\n    };\r\n\r\n    if (!isEmptyOrSpaces(message)) {\r\n      handleSendMsg(message);\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"button-container\">\r\n        {/* Emoji Selector */}\r\n        <div className=\"emoji\">\r\n          <BsEmojiSmileFill onClick={handleEmojiPickerHideShow} />\r\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\r\n        </div>\r\n      </div>\r\n      {/* Form Input */}\r\n      <form className=\"input-container\" onSubmit={(e) => sendChat(e)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button className=\"submit\">\r\n          <IoMdSend />\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Styled Components\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 5% 95%;\r\n  align-items: center;\r\n  background-color: rgb(218, 154, 165);\r\n  padding: 0 2rem;\r\n  padding-bottom: 0.3rem;\r\n  border-bottom-right-radius: 2rem;\r\n\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #fff;\r\n    gap: 1rem;\r\n\r\n    .emoji {\r\n      position: relative;\r\n      svg {\r\n        font-size: 2rem;\r\n        color: rgba(255, 255, 0 , 0.784);\r\n        cursor: pointer;\r\n      }\r\n\r\n      .emoji-picker-react {\r\n        position: absolute;\r\n        top: -350px;\r\n        background-color: rgb(81, 57, 61);\r\n        box-shadow: 0px 2px 3px white;\r\n        border-color: #9a86f3;\r\n\r\n        .emoji-scroll-wrapper::-webkit-scrollbar {\r\n          background-color: rgb(81, 57, 61);\r\n          width: 5px;\r\n\r\n          &-thumb {\r\n            background-color: rgb(81, 57, 61);\r\n          }\r\n        }\r\n\r\n        .emoji-categories {\r\n          button {\r\n            filter: contrast(1);\r\n          }\r\n        }\r\n\r\n        .emoji-search {\r\n          background-color: transparent;\r\n          background-color: rgb(81, 57, 61);\r\n        }\r\n\r\n        .emoji-group::before {\r\n          background-color: rgb(81, 57, 61);\r\n        }\r\n\r\n        input {\r\n          color: black;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    background-color: rgba(255, 255, 255, 0.204);\r\n\r\n    input {\r\n      width: 90%;\r\n      background-color: transparent;\r\n      color: #fff;\r\n      border: none;\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n\r\n      &::selection {\r\n        background-color: #9a86f3;\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    button {\r\n      padding: 0.3rem 1.3rem;\r\n      border-radius: 2rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #9a86f3;\r\n      border: none;\r\n      cursor: pointer;\r\n\r\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        padding: 0.3rem 1rem;\r\n\r\n        svg {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ChatInput;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,gBAAjC,C,CAEA;;;;AACA,MAAMC,SAAS,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACvC,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAFuC,CAIvC;;EACA,MAAMW,yBAAyB,GAAG,MAAM;IACtCH,kBAAkB,CAAC,CAACD,eAAF,CAAlB;EACD,CAFD,CALuC,CASvC;;;EACA,MAAMK,gBAAgB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;IACrC,IAAIC,GAAG,GAAGN,OAAV;IACAM,GAAG,IAAID,KAAK,CAACA,KAAb;IACAJ,UAAU,CAACK,GAAD,CAAV;EACD,CAJD,CAVuC,CAgBvC;;;EACA,MAAMC,QAAQ,GAAIH,CAAD,IAAO;IACtBA,CAAC,CAACI,cAAF,GADsB,CAGtB;;IACA,MAAMC,eAAe,GAAIC,GAAD,IAAS;MAC/B,OAAO,QAAQC,IAAR,CAAaD,GAAb,CAAP;IACD,CAFD;;IAIA,IAAI,CAACD,eAAe,CAACT,OAAD,CAApB,EAA+B;MAC7BH,aAAa,CAACG,OAAD,CAAb;MACAC,UAAU,CAAC,EAAD,CAAV;IACD;EACF,CAZD;;EAcA,oBACE,QAAC,SAAD;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBAEE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE,QAAC,gBAAD;UAAkB,OAAO,EAAEC;QAA3B;UAAA;UAAA;UAAA;QAAA,QADF,EAEGJ,eAAe,iBAAI,QAAC,MAAD;UAAQ,YAAY,EAAEK;QAAtB;UAAA;UAAA;UAAA;QAAA,QAFtB;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MAAM,SAAS,EAAC,iBAAhB;MAAkC,QAAQ,EAAGC,CAAD,IAAOG,QAAQ,CAACH,CAAD,CAA3D;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,2BAFd;QAGE,KAAK,EAAEJ,OAHT;QAIE,QAAQ,EAAGI,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACQ,MAAF,CAASC,KAAV;MAJ7B;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAQ,SAAS,EAAC,QAAlB;QAAA,uBACE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAtDD,C,CAwDA;;;GAxDMjB,S;;KAAAA,S;AAyDN,MAAMkB,SAAS,GAAGtB,MAAM,CAACunHA;MAAMD,S;AAqHN,eAAelB,SAAf"},"metadata":{},"sourceType":"module"}