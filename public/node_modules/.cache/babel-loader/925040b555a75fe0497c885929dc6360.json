{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\areeb\\\\Documents\\\\PROJECT\\\\chat-app-react-nodejs\\\\PROJECT\\\\Myapp\\\\public\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Logout from \"./Logout\";\nimport DefaultAvatar from \"../assets/user-default.png\";\nimport ChatInput from \"./ChatInput\";\nimport Messages from \"./Messages\";\nimport { getAllMessagesRoute, sendMessageRoute } from \"../utils/APIRoutes\"; // Chat Container\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(undefined);\n  const scrollRef = useRef(); // fetch all messages\n\n  useEffect(() => {\n    const fetchAllMessages = async () => {\n      const response = await axios.post(getAllMessagesRoute, {\n        from: currentUser === null || currentUser === void 0 ? void 0 : currentUser._id,\n        to: currentChat === null || currentChat === void 0 ? void 0 : currentChat._id\n      });\n      setMessages(response === null || response === void 0 ? void 0 : response.data);\n    };\n\n    fetchAllMessages();\n  }, [currentChat]); // socket.io message recieve\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []); // check message from server using socket.io\n\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]); // change scroll to latest message\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behaviour: \"smooth\"\n    });\n  }, [messages]); // Handle Send Messages\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    }); // socket.io send msg\n\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${currentChat !== null && currentChat !== void 0 && currentChat.isAvatarImageSet ? `data:image/svg+xml;base64,${currentChat === null || currentChat === void 0 ? void 0 : currentChat.avatarImage}` : DefaultAvatar}`,\n            alt: `${currentChat === null || currentChat === void 0 ? void 0 : currentChat.username}'s Avatar`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {\n      messages: messages,\n      scrollRef: scrollRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      handleSendMsg: handleSendMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}; // Styled Components\n\n\n_s(ChatContainer, \"HCA3vzIswKA86NEm0hAAv/8dV4Q=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n  padding-top: 1rem;\n  display: grid;\n  grid-template-rows: 10% 77% 13%;\n  gap: 0.1rem;\n  overflow: hidden;\n  background-color: rgba(222, 222, 222, 0.902);\n  border-radius: 3ch 0ch;\n\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    \n\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      text-transform: uppercase;\n\n      cursor: default;\n\n      .avatar {\n        img {\n          height: 5ch;\n        }\n      }\n\n      .username {\n        h3 {\n          color: black;\n        }\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default ChatContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","styled","Logout","DefaultAvatar","ChatInput","Messages","getAllMessagesRoute","sendMessageRoute","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","undefined","scrollRef","fetchAllMessages","response","post","from","_id","to","data","current","on","msg","fromSelf","message","prev","scrollIntoView","behaviour","handleSendMsg","emit","msgs","push","isAvatarImageSet","avatarImage","username","Container","div"],"sources":["C:/Users/areeb/Documents/PROJECT/chat-app-react-nodejs/PROJECT/Myapp/public/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Logout from \"./Logout\";\r\nimport DefaultAvatar from \"../assets/user-default.png\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Messages from \"./Messages\";\r\nimport { getAllMessagesRoute, sendMessageRoute } from \"../utils/APIRoutes\";\r\n\r\n// Chat Container\r\nconst ChatContainer = ({ currentChat, currentUser, socket }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(undefined);\r\n  const scrollRef = useRef();\r\n\r\n  // fetch all messages\r\n  useEffect(() => {\r\n    const fetchAllMessages = async () => {\r\n      const response = await axios.post(getAllMessagesRoute, {\r\n        from: currentUser?._id,\r\n        to: currentChat?._id,\r\n      });\r\n\r\n      setMessages(response?.data);\r\n    };\r\n\r\n    fetchAllMessages();\r\n  }, [currentChat]);  \r\n\r\n  // socket.io message recieve\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"msg-recieve\", (msg) => {\r\n        setArrivalMessage({ fromSelf: false, message: msg });\r\n      });\r\n    }\r\n  }, []);  \r\n\r\n  // check message from server using socket.io\r\n  useEffect(() => {\r\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage]);\r\n\r\n  // change scroll to latest message\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  // Handle Send Messages\r\n  const handleSendMsg = async (msg) => {\r\n    await axios.post(sendMessageRoute, {\r\n      from: currentUser._id,\r\n      to: currentChat._id,\r\n      message: msg,\r\n    });\r\n\r\n    // socket.io send msg\r\n    socket.current.emit(\"send-msg\", {\r\n      to: currentChat._id,\r\n      from: currentUser._id,\r\n      message: msg,\r\n    });\r\n\r\n    const msgs = [...messages];\r\n    msgs.push({ fromSelf: true, message: msg });\r\n    setMessages(msgs);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"chat-header\">\r\n        <div className=\"user-details\">\r\n          {/* User Avatar */}\r\n          <div className=\"avatar\">\r\n            <img\r\n              src={`${\r\n                currentChat?.isAvatarImageSet\r\n                  ? `data:image/svg+xml;base64,${currentChat?.avatarImage}`\r\n                  : DefaultAvatar\r\n              }`}\r\n              alt={`${currentChat?.username}'s Avatar`}\r\n            />\r\n          </div>\r\n          {/* Avatar Username */}\r\n          <div className=\"username\">\r\n            <h3>{currentChat?.username}</h3>\r\n          </div>\r\n        </div>\r\n        {/* Logout */}\r\n        <Logout />\r\n      </div>\r\n      {/* Messages */}\r\n      <Messages messages={messages} scrollRef={scrollRef} />\r\n      <ChatInput handleSendMsg={handleSendMsg} />\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Styled Components\r\nconst Container = styled.div`\r\n  padding-top: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 10% 77% 13%;\r\n  gap: 0.1rem;\r\n  overflow: hidden;\r\n  background-color: rgba(222, 222, 222, 0.902);\r\n  border-radius: 3ch 0ch;\r\n\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    grid-template-rows: 15% 70% 15%;\r\n  }\r\n\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    \r\n\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      text-transform: uppercase;\r\n\r\n      cursor: default;\r\n\r\n      .avatar {\r\n        img {\r\n          height: 5ch;\r\n        }\r\n      }\r\n\r\n      .username {\r\n        h3 {\r\n          color: black;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}